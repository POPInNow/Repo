/*
 * Copyright (C) 2018 POP Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: "com.getkeepsafe.dexcount"
apply plugin: 'org.jetbrains.dokka-android'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

android {
  compileSdkVersion rootProject.ext.maxSdk
  defaultConfig {
    minSdkVersion rootProject.ext.minSdk
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  // TODO replace with https://issuetracker.google.com/issues/72050365 once released.
  libraryVariants.all {
    it.generateBuildConfig.enabled = false
  }
}

/**
 * Publish the source code with the library
 */
task androidSourcesJar(type: Jar) {
  classifier = 'sources'
  from android.sourceSets.main.java.source
}

/**
 * Publish javadoc with library
 */
task androidJavadocsJar(type: Jar, dependsOn: dokka) {
  classifier = 'javadoc'
  from "$buildDir/dokka"
}

artifacts {
  archives androidSourcesJar
  archives androidJavadocsJar
}

publishing {
  publications {
    Repo(MavenPublication) {
      artifact bundleReleaseAar
      artifact androidSourcesJar
      artifact androidJavadocsJar
      groupId POM_GROUP
      artifactId project.name
      version POM_VERSION

      pom.withXml {
        def dependenciesNode = asNode().appendNode('dependencies')

        configurations.implementation.allDependencies.each {
          // Ensure dependencies such as fileTree are not included in the pom.
          if (it.name != 'unspecified') {
            def dependencyNode = dependenciesNode.appendNode('dependency')
            dependencyNode.appendNode('groupId', it.group)
            dependencyNode.appendNode('artifactId', it.name)
            dependencyNode.appendNode('version', it.version)
          }
        }
      }
    }
  }
}

final String GITHUB_ROOT_URL = "https://github.com/POPinNow/Repo"
bintray {
  user = 'popindeveloper'
  key = BINTRAY_API_KEY
  publications = ['Repo']
  override = true
  pkg {
    repo = 'Repo'
    name = project.name
    desc = "Simple implementation of the client-side Repository pattern in Android"
    licenses = ['Apache-2.0']
    vcsUrl = "${GITHUB_ROOT_URL}"
    websiteUrl = "${GITHUB_ROOT_URL}"
    version {
      name = POM_VERSION
      issueTrackerUrl = "${GITHUB_ROOT_URL}/issues"
      desc = "Simple implementation of the client-side Repository pattern in Android"
      released = new Date()
      vcsTag = POM_VERSION
    }
  }
}

dependencies {
  implementation "io.reactivex.rxjava2:rxjava:$rxjava"
  implementation "androidx.annotation:annotation:$androidx"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  testImplementation "junit:junit:$junit"
  testImplementation "org.mockito:mockito-core:$mockito"
  testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
